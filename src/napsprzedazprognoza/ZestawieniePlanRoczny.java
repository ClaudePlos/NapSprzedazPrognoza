/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package napsprzedazprognoza;

import java.awt.Cursor;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import napsprzedazprognoza.excel.CSVExporter;
import napsprzedazprognoza.excel.ExcelExporter;
import napsprzedazprognoza.models.NapSprzedazPrognozaVO;
import napsprzedazprognoza.models.NapSprzedazPrognozaWylVO;
import napsprzedazprognoza.models.WyliczKwotaRocznaDTO;
import napsprzedazprognoza.renderer.NumberRenderer;
import napsprzedazprognoza.services.NapServices;

/**
 *
 * @author k.skowronski
 */
public class ZestawieniePlanRoczny extends javax.swing.JFrame {

    
    final JPanel panel = new JPanel();
    
    private NapServices napServ = NapServices.getInstance();

    
    List<NapSprzedazPrognozaVO> umowy = new ArrayList<NapSprzedazPrognozaVO>();
    
    List<NapSprzedazPrognozaWylVO> okresy = new ArrayList<NapSprzedazPrognozaWylVO>();
    
    /**
     * Creates new form ZestawieniePlanRoczny
     */
    public ZestawieniePlanRoczny() {
        initComponents();
        
        setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );
        
        
        
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        jTextData.setText( dateFormat.format(date) );
        
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable1.rowAtPoint(evt.getPoint());
                int col = jTable1.columnAtPoint(evt.getPoint());
                
                String rodzaj = jTable1.getValueAt(row, 0).toString();
                
                
                jakieUmowy( jTextData.getText() ,  rodzaj );
                
            }
        });
        
        
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable2.rowAtPoint(evt.getPoint());
                int col = jTable2.columnAtPoint(evt.getPoint());
                
                String sk = jTable2.getValueAt(row, 0).toString();
                
                
                jakieOkresyDlaUmowy( jTextData.getText() ,  sk );
                
            }
        });
        
        
      // przeliczDane( dateFormat.format(date) );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextData = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Zestawienie plan roczny");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("csv");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextData.setText("_null");

        jLabel2.setText("Na dzień:");

        jButton3.setText("Odśwież");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SK", "DataZakonczenia", "Kwota"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setText("Wykaz umów:");

        jLabel4.setText("0");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rodzaj", "SK", "Okres", "KwotaMC", "Rodzaj"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel5.setText("Wykaz okresy dla umowy:");

        jLabel6.setText("0");

        jLabel7.setText("Wykaz umów tylko dla wierszy: kontrakty, odnowienia ");
        jLabel7.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(291, 291, 291)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        
         TableModel model2 = jTable1.getModel();
        
        ExcelExporter csvExp = new ExcelExporter();
        String ret = csvExp.ExportTable(model2, this);
        
        if ( ret.equals("OK") )
        {
            JOptionPane.showMessageDialog(panel, "Zapisane", "Info", JOptionPane.INFORMATION_MESSAGE);
        } 
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        TableModel model2 = jTable1.getModel();
        
        CSVExporter csvExp = new CSVExporter();
        String ret = csvExp.ExportTable(model2, this);
        
        if ( ret.equals("OK") )
        {
            JOptionPane.showMessageDialog(panel, "Zapisane", "Info", JOptionPane.INFORMATION_MESSAGE);
        } 
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        przeliczDane( jTextData.getText() );
        this.setCursor( Cursor.getDefaultCursor() );
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ZestawieniePlanRoczny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ZestawieniePlanRoczny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ZestawieniePlanRoczny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ZestawieniePlanRoczny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ZestawieniePlanRoczny().setVisible(true);
            }
        });
    }
    
    
    private void przeliczDane( String naDzien ){
        
        int rok = 2016; //TODO
        
        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();

        
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
        jTable1.setRowSorter(sorter);
        
        tm.getDataVector().removeAllElements();
        tm.fireTableDataChanged();
        tm.setColumnCount(0);
        
     
        
        tm.addColumn("Rodzaj");
        tm.addColumn( rok );
        tm.addColumn( rok + 1 );
        tm.addColumn( rok + 2 );
        tm.addColumn( rok + 3 );
        tm.addColumn( rok + 4 );
        tm.addColumn( rok + 5 );
        
             /// ALL
                ////00
                WyliczKwotaRocznaDTO  wylRocznePlan01 = napServ.zestawienieRodznePodaj( rok, "plan", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlan02 = napServ.zestawienieRodznePodaj( rok + 1, "plan", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlan03 = napServ.zestawienieRodznePodaj( rok + 2, "plan", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlan04 = napServ.zestawienieRodznePodaj( rok + 3, "plan", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlan05 = napServ.zestawienieRodznePodaj( rok + 4, "plan", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlan06 = napServ.zestawienieRodznePodaj( rok + 5, "plan", "ALL", naDzien );
        
                Object[] dok = { wylRocznePlan01.getRodzaj(), wylRocznePlan01.getKwotaIlosc(), wylRocznePlan02.getKwotaIlosc(), wylRocznePlan03.getKwotaIlosc(), wylRocznePlan04.getKwotaIlosc()
                                 , wylRocznePlan05.getKwotaIlosc(), wylRocznePlan06.getKwotaIlosc()};
                tm.addRow(dok);
                
        
                ////01
                WyliczKwotaRocznaDTO  wylRoczneKontrakt01 = napServ.zestawienieRodznePodaj( rok, "kontrakty", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontrakt02 = napServ.zestawienieRodznePodaj( rok + 1, "kontrakty", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontrakt03 = napServ.zestawienieRodznePodaj( rok + 2, "kontrakty", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontrakt04 = napServ.zestawienieRodznePodaj( rok + 3, "kontrakty", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontrakt05 = napServ.zestawienieRodznePodaj( rok + 4, "kontrakty", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontrakt06 = napServ.zestawienieRodznePodaj( rok + 5, "kontrakty", "ALL", naDzien );
                
                
                Object[] dok1 = { wylRoczneKontrakt01.getRodzaj(), wylRoczneKontrakt01.getKwotaIlosc(), wylRoczneKontrakt02.getKwotaIlosc(), wylRoczneKontrakt03.getKwotaIlosc(), wylRoczneKontrakt04.getKwotaIlosc()
                                 , wylRoczneKontrakt05.getKwotaIlosc(), wylRoczneKontrakt06.getKwotaIlosc()};
                tm.addRow(dok1);
                
                
                ////02
                WyliczKwotaRocznaDTO  wylRoczneOdnowienie01 = napServ.zestawienieRodznePodaj( rok, "odnowienie", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienie02 = napServ.zestawienieRodznePodaj( rok + 1, "odnowienie", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienie03 = napServ.zestawienieRodznePodaj( rok + 2, "odnowienie", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienie04 = napServ.zestawienieRodznePodaj( rok + 3, "odnowienie", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienie05 = napServ.zestawienieRodznePodaj( rok + 4, "odnowienie", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienie06 = napServ.zestawienieRodznePodaj( rok + 5, "odnowienie", "ALL", naDzien );
                
                
                Object[] dok2 = { wylRoczneOdnowienie01.getRodzaj(), wylRoczneOdnowienie01.getKwotaIlosc(), wylRoczneOdnowienie02.getKwotaIlosc(), wylRoczneOdnowienie03.getKwotaIlosc()
                               , wylRoczneOdnowienie04.getKwotaIlosc(), wylRoczneOdnowienie05.getKwotaIlosc(), wylRoczneOdnowienie06.getKwotaIlosc()};
                tm.addRow(dok2);
                
                
                //// nowe
                WyliczKwotaRocznaDTO  wylRoczneNowe01 = new WyliczKwotaRocznaDTO();
                        wylRoczneNowe01.setRok(rok);
                        wylRoczneNowe01.setRodzaj("nowe");
                        wylRoczneNowe01.setKwotaIlosc( wylRocznePlan01.getKwotaIlosc().subtract( wylRoczneKontrakt01.getKwotaIlosc().add(wylRoczneOdnowienie01.getKwotaIlosc()) ) );
                        
                WyliczKwotaRocznaDTO  wylRoczneNowe02 = new WyliczKwotaRocznaDTO();
                        wylRoczneNowe02.setRok(rok + 1);
                        wylRoczneNowe02.setRodzaj("nowe");
                        wylRoczneNowe02.setKwotaIlosc( wylRocznePlan02.getKwotaIlosc().subtract( wylRoczneKontrakt02.getKwotaIlosc().add(wylRoczneOdnowienie02.getKwotaIlosc()) ) );        
                        
                WyliczKwotaRocznaDTO  wylRoczneNowe03 = new WyliczKwotaRocznaDTO();
                        wylRoczneNowe03.setRok(rok + 2);
                        wylRoczneNowe03.setRodzaj("nowe");
                        wylRoczneNowe03.setKwotaIlosc( wylRocznePlan03.getKwotaIlosc().subtract( wylRoczneKontrakt03.getKwotaIlosc().add(wylRoczneOdnowienie03.getKwotaIlosc()) ) );        
                
                WyliczKwotaRocznaDTO  wylRoczneNowe04 = new WyliczKwotaRocznaDTO();
                        wylRoczneNowe04.setRok(rok + 3);
                        wylRoczneNowe04.setRodzaj("nowe");
                        wylRoczneNowe04.setKwotaIlosc( wylRocznePlan04.getKwotaIlosc().subtract( wylRoczneKontrakt04.getKwotaIlosc().add(wylRoczneOdnowienie04.getKwotaIlosc()) ) );
        
                WyliczKwotaRocznaDTO  wylRoczneNowe05 = new WyliczKwotaRocznaDTO();
                        wylRoczneNowe05.setRok(rok + 4);
                        wylRoczneNowe05.setRodzaj("nowe");
                        wylRoczneNowe05.setKwotaIlosc( wylRocznePlan05.getKwotaIlosc().subtract( wylRoczneKontrakt05.getKwotaIlosc().add(wylRoczneOdnowienie05.getKwotaIlosc()) ) );
                        
                WyliczKwotaRocznaDTO  wylRoczneNowe06 = new WyliczKwotaRocznaDTO();
                        wylRoczneNowe06.setRok(rok + 5);
                        wylRoczneNowe06.setRodzaj("nowe");
                        wylRoczneNowe06.setKwotaIlosc( wylRocznePlan06.getKwotaIlosc().subtract( wylRoczneKontrakt06.getKwotaIlosc().add(wylRoczneOdnowienie06.getKwotaIlosc()) ) );
                        
                Object[] dok5 = { wylRoczneNowe01.getRodzaj()
                      , wylRoczneNowe01.getKwotaIlosc()
                      , wylRoczneNowe02.getKwotaIlosc()
                      , wylRoczneNowe03.getKwotaIlosc()
                      , wylRoczneNowe04.getKwotaIlosc()
                      , wylRoczneNowe05.getKwotaIlosc()
                      , wylRoczneNowe06.getKwotaIlosc()  
                };
                tm.addRow(dok5);  
                
                
                
                
                
                ////03
                WyliczKwotaRocznaDTO  wylRoczneUmow01 = napServ.zestawienieRodznePodaj( rok, "umow", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmow02 = napServ.zestawienieRodznePodaj( rok + 1, "umow", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmow03 = napServ.zestawienieRodznePodaj( rok + 2, "umow", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmow04 = napServ.zestawienieRodznePodaj( rok + 3, "umow", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmow05 = napServ.zestawienieRodznePodaj( rok + 4, "umow", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmow06 = napServ.zestawienieRodznePodaj( rok + 5, "umow", "ALL", naDzien );
                
                
                Object[] dok3 = { wylRoczneUmow01.getRodzaj()
                      , wylRoczneUmow01.getKwotaIlosc()
                      , wylRoczneUmow02.getKwotaIlosc()
                      , wylRoczneUmow03.getKwotaIlosc()
                      , wylRoczneUmow04.getKwotaIlosc()
                      , wylRoczneUmow05.getKwotaIlosc()
                      , wylRoczneUmow06.getKwotaIlosc()  
                };
                tm.addRow(dok3);
                
                
                ////04
                WyliczKwotaRocznaDTO  wylRoczneOdnowien01 = napServ.zestawienieRodznePodaj( rok, "odnowien", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowien02 = napServ.zestawienieRodznePodaj( rok + 1, "odnowien", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowien03 = napServ.zestawienieRodznePodaj( rok + 2, "odnowien", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowien04 = napServ.zestawienieRodznePodaj( rok + 3, "odnowien", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowien05 = napServ.zestawienieRodznePodaj( rok + 4, "odnowien", "ALL", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowien06 = napServ.zestawienieRodznePodaj( rok + 5, "odnowien", "ALL", naDzien );
                
                
                Object[] dok4 = { wylRoczneOdnowien01.getRodzaj()
                      , wylRoczneOdnowien01.getKwotaIlosc()
                      , wylRoczneOdnowien02.getKwotaIlosc()
                      , wylRoczneOdnowien03.getKwotaIlosc()
                      , wylRoczneOdnowien04.getKwotaIlosc()
                      , wylRoczneOdnowien05.getKwotaIlosc()
                      , wylRoczneOdnowien06.getKwotaIlosc()  
                };
                tm.addRow(dok4);
                
                
                
                
                
                
                
         //// C
                
                 ////00
                WyliczKwotaRocznaDTO  wylRocznePlanC01 = napServ.zestawienieRodznePodaj( rok, "planC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanC02 = napServ.zestawienieRodznePodaj( rok + 1, "planC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanC03 = napServ.zestawienieRodznePodaj( rok + 2, "planC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanC04 = napServ.zestawienieRodznePodaj( rok + 3, "planC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanC05 = napServ.zestawienieRodznePodaj( rok + 4, "planC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanC06 = napServ.zestawienieRodznePodaj( rok + 5, "planC", "C", naDzien );
        
                Object[] dok00 = { wylRocznePlanC01.getRodzaj(), wylRocznePlanC01.getKwotaIlosc(), wylRocznePlanC02.getKwotaIlosc(), wylRocznePlanC03.getKwotaIlosc(), wylRocznePlanC04.getKwotaIlosc()
                                 , wylRocznePlanC05.getKwotaIlosc(), wylRocznePlanC06.getKwotaIlosc()};
                tm.addRow(dok00);
                
        
                ////01
                WyliczKwotaRocznaDTO  wylRoczneKontraktC01 = napServ.zestawienieRodznePodaj( rok, "kontraktyC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktC02 = napServ.zestawienieRodznePodaj( rok + 1, "kontraktyC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktC03 = napServ.zestawienieRodznePodaj( rok + 2, "kontraktyC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktC04 = napServ.zestawienieRodznePodaj( rok + 3, "kontraktyC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktC05 = napServ.zestawienieRodznePodaj( rok + 4, "kontraktyC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktC06 = napServ.zestawienieRodznePodaj( rok + 5, "kontraktyC", "C", naDzien );
                
                
                Object[] dok01 = { wylRoczneKontraktC01.getRodzaj(), wylRoczneKontraktC01.getKwotaIlosc(), wylRoczneKontraktC02.getKwotaIlosc(), wylRoczneKontraktC03.getKwotaIlosc(), wylRoczneKontraktC04.getKwotaIlosc()
                                 , wylRoczneKontraktC05.getKwotaIlosc(), wylRoczneKontraktC06.getKwotaIlosc()};
                tm.addRow(dok01);
                
                
                ////02
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieC01 = napServ.zestawienieRodznePodaj( rok, "odnowienieC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieC02 = napServ.zestawienieRodznePodaj( rok + 1, "odnowienieC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieC03 = napServ.zestawienieRodznePodaj( rok + 2, "odnowienieC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieC04 = napServ.zestawienieRodznePodaj( rok + 3, "odnowienieC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieC05 = napServ.zestawienieRodznePodaj( rok + 4, "odnowienieC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieC06 = napServ.zestawienieRodznePodaj( rok + 5, "odnowienieC", "C", naDzien );
                
                
                Object[] dok02 = { wylRoczneOdnowienieC01.getRodzaj(), wylRoczneOdnowienieC01.getKwotaIlosc(), wylRoczneOdnowienieC02.getKwotaIlosc(), wylRoczneOdnowienieC03.getKwotaIlosc()
                               , wylRoczneOdnowienieC04.getKwotaIlosc(), wylRoczneOdnowienieC05.getKwotaIlosc(), wylRoczneOdnowienieC06.getKwotaIlosc()};
                tm.addRow(dok02);
                
                
                //// nowe
                WyliczKwotaRocznaDTO  wylRoczneNoweC01 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweC01.setRok(rok);
                        wylRoczneNoweC01.setRodzaj("noweC");
                        wylRoczneNoweC01.setKwotaIlosc( wylRocznePlanC01.getKwotaIlosc().subtract( wylRoczneKontraktC01.getKwotaIlosc().add(wylRoczneOdnowienieC01.getKwotaIlosc()) ) );
                        
                WyliczKwotaRocznaDTO  wylRoczneNoweC02 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweC02.setRok(rok + 1);
                        wylRoczneNoweC02.setRodzaj("noweC");
                        wylRoczneNoweC02.setKwotaIlosc( wylRocznePlanC02.getKwotaIlosc().subtract( wylRoczneKontraktC02.getKwotaIlosc().add(wylRoczneOdnowienieC02.getKwotaIlosc()) ) );        
                        
                WyliczKwotaRocznaDTO  wylRoczneNoweC03 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweC03.setRok(rok + 2);
                        wylRoczneNoweC03.setRodzaj("noweC");
                        wylRoczneNoweC03.setKwotaIlosc( wylRocznePlanC03.getKwotaIlosc().subtract( wylRoczneKontraktC03.getKwotaIlosc().add(wylRoczneOdnowienieC03.getKwotaIlosc()) ) );        
                
                WyliczKwotaRocznaDTO  wylRoczneNoweC04 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweC04.setRok(rok + 3);
                        wylRoczneNoweC04.setRodzaj("noweC");
                        wylRoczneNoweC04.setKwotaIlosc( wylRocznePlanC04.getKwotaIlosc().subtract( wylRoczneKontraktC04.getKwotaIlosc().add(wylRoczneOdnowienieC04.getKwotaIlosc()) ) );
        
                WyliczKwotaRocznaDTO  wylRoczneNoweC05 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweC05.setRok(rok + 4);
                        wylRoczneNoweC05.setRodzaj("noweC");
                        wylRoczneNoweC05.setKwotaIlosc( wylRocznePlanC05.getKwotaIlosc().subtract( wylRoczneKontraktC05.getKwotaIlosc().add(wylRoczneOdnowienieC05.getKwotaIlosc()) ) );
                        
                WyliczKwotaRocznaDTO  wylRoczneNoweC06 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweC06.setRok(rok + 5);
                        wylRoczneNoweC06.setRodzaj("noweC");
                        wylRoczneNoweC06.setKwotaIlosc( wylRocznePlanC06.getKwotaIlosc().subtract( wylRoczneKontraktC06.getKwotaIlosc().add(wylRoczneOdnowienieC06.getKwotaIlosc()) ) );
                        
                Object[] dok05 = { wylRoczneNoweC01.getRodzaj()
                      , wylRoczneNoweC01.getKwotaIlosc()
                      , wylRoczneNoweC02.getKwotaIlosc()
                      , wylRoczneNoweC03.getKwotaIlosc()
                      , wylRoczneNoweC04.getKwotaIlosc()
                      , wylRoczneNoweC05.getKwotaIlosc()
                      , wylRoczneNoweC06.getKwotaIlosc()  
                };
                tm.addRow(dok05);  
                
                
                
                
                
                ////03
                WyliczKwotaRocznaDTO  wylRoczneUmowC01 = napServ.zestawienieRodznePodaj( rok, "umowC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowC02 = napServ.zestawienieRodznePodaj( rok + 1, "umowC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowC03 = napServ.zestawienieRodznePodaj( rok + 2, "umowC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowC04 = napServ.zestawienieRodznePodaj( rok + 3, "umowC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowC05 = napServ.zestawienieRodznePodaj( rok + 4, "umowC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowC06 = napServ.zestawienieRodznePodaj( rok + 5, "umowC", "C", naDzien );
                
                
                Object[] dok03 = { wylRoczneUmowC01.getRodzaj()
                      , wylRoczneUmowC01.getKwotaIlosc()
                      , wylRoczneUmowC02.getKwotaIlosc()
                      , wylRoczneUmowC03.getKwotaIlosc()
                      , wylRoczneUmowC04.getKwotaIlosc()
                      , wylRoczneUmowC05.getKwotaIlosc()
                      , wylRoczneUmowC06.getKwotaIlosc()  
                };
                tm.addRow(dok03);
                
                
                ////04
                WyliczKwotaRocznaDTO  wylRoczneOdnowienC01 = napServ.zestawienieRodznePodaj( rok, "odnowienC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienC02 = napServ.zestawienieRodznePodaj( rok + 1, "odnowienC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienC03 = napServ.zestawienieRodznePodaj( rok + 2, "odnowienC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienC04 = napServ.zestawienieRodznePodaj( rok + 3, "odnowienC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienC05 = napServ.zestawienieRodznePodaj( rok + 4, "odnowienC", "C", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienC06 = napServ.zestawienieRodznePodaj( rok + 5, "odnowienC", "C", naDzien );
                
                
                Object[] dok04 = { wylRoczneOdnowienC01.getRodzaj()
                      , wylRoczneOdnowienC01.getKwotaIlosc()
                      , wylRoczneOdnowienC02.getKwotaIlosc()
                      , wylRoczneOdnowienC03.getKwotaIlosc()
                      , wylRoczneOdnowienC04.getKwotaIlosc()
                      , wylRoczneOdnowienC05.getKwotaIlosc()
                      , wylRoczneOdnowienC06.getKwotaIlosc()  
                };
                tm.addRow(dok04);
                
                
                
                
                
                
                
                
         //// Z
                
                 ////00
                WyliczKwotaRocznaDTO  wylRocznePlanZ01 = napServ.zestawienieRodznePodaj( rok, "planZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanZ02 = napServ.zestawienieRodznePodaj( rok + 1, "planZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanZ03 = napServ.zestawienieRodznePodaj( rok + 2, "planZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanZ04 = napServ.zestawienieRodznePodaj( rok + 3, "planZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanZ05 = napServ.zestawienieRodznePodaj( rok + 4, "planZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRocznePlanZ06 = napServ.zestawienieRodznePodaj( rok + 5, "planZ", "Z", naDzien );
        
                Object[] dok000 = { wylRocznePlanZ01.getRodzaj(), wylRocznePlanZ01.getKwotaIlosc(), wylRocznePlanZ02.getKwotaIlosc(), wylRocznePlanZ03.getKwotaIlosc(), wylRocznePlanZ04.getKwotaIlosc()
                                 , wylRocznePlanZ05.getKwotaIlosc(), wylRocznePlanZ06.getKwotaIlosc()};
                tm.addRow(dok000);
                
        
                ////01
                WyliczKwotaRocznaDTO  wylRoczneKontraktZ01 = napServ.zestawienieRodznePodaj( rok, "kontraktyZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktZ02 = napServ.zestawienieRodznePodaj( rok + 1, "kontraktyZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktZ03 = napServ.zestawienieRodznePodaj( rok + 2, "kontraktyZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktZ04 = napServ.zestawienieRodznePodaj( rok + 3, "kontraktyZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktZ05 = napServ.zestawienieRodznePodaj( rok + 4, "kontraktyZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneKontraktZ06 = napServ.zestawienieRodznePodaj( rok + 5, "kontraktyZ", "Z", naDzien );
                
                
                Object[] dok001 = { wylRoczneKontraktZ01.getRodzaj(), wylRoczneKontraktZ01.getKwotaIlosc(), wylRoczneKontraktZ02.getKwotaIlosc(), wylRoczneKontraktZ03.getKwotaIlosc(), wylRoczneKontraktZ04.getKwotaIlosc()
                                 , wylRoczneKontraktZ05.getKwotaIlosc(), wylRoczneKontraktZ06.getKwotaIlosc()};
                tm.addRow(dok001);
                
                
                ////02
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieZ01 = napServ.zestawienieRodznePodaj( rok, "odnowienieZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieZ02 = napServ.zestawienieRodznePodaj( rok + 1, "odnowienieZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieZ03 = napServ.zestawienieRodznePodaj( rok + 2, "odnowienieZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieZ04 = napServ.zestawienieRodznePodaj( rok + 3, "odnowienieZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieZ05 = napServ.zestawienieRodznePodaj( rok + 4, "odnowienieZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienieZ06 = napServ.zestawienieRodznePodaj( rok + 5, "odnowienieZ", "Z", naDzien );
                
                
                Object[] dok002 = { wylRoczneOdnowienieZ01.getRodzaj(), wylRoczneOdnowienieZ01.getKwotaIlosc(), wylRoczneOdnowienieZ02.getKwotaIlosc(), wylRoczneOdnowienieZ03.getKwotaIlosc()
                               , wylRoczneOdnowienieZ04.getKwotaIlosc(), wylRoczneOdnowienieZ05.getKwotaIlosc(), wylRoczneOdnowienieZ06.getKwotaIlosc()};
                tm.addRow(dok002);
                
                
                //// nowe
                WyliczKwotaRocznaDTO  wylRoczneNoweZ01 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweZ01.setRok(rok);
                        wylRoczneNoweZ01.setRodzaj("noweZ");
                        wylRoczneNoweZ01.setKwotaIlosc( wylRocznePlanZ01.getKwotaIlosc().subtract( wylRoczneKontraktZ01.getKwotaIlosc().add(wylRoczneOdnowienieZ01.getKwotaIlosc()) ) );
                        
                WyliczKwotaRocznaDTO  wylRoczneNoweZ02 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweZ02.setRok(rok + 1);
                        wylRoczneNoweZ02.setRodzaj("noweZ");
                        wylRoczneNoweZ02.setKwotaIlosc( wylRocznePlanZ02.getKwotaIlosc().subtract( wylRoczneKontraktZ02.getKwotaIlosc().add(wylRoczneOdnowienieZ02.getKwotaIlosc()) ) );        
                        
                WyliczKwotaRocznaDTO  wylRoczneNoweZ03 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweZ03.setRok(rok + 2);
                        wylRoczneNoweZ03.setRodzaj("noweZ");
                        wylRoczneNoweZ03.setKwotaIlosc( wylRocznePlanZ03.getKwotaIlosc().subtract( wylRoczneKontraktZ03.getKwotaIlosc().add(wylRoczneOdnowienieZ03.getKwotaIlosc()) ) );        
                
                WyliczKwotaRocznaDTO  wylRoczneNoweZ04 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweZ04.setRok(rok + 3);
                        wylRoczneNoweZ04.setRodzaj("noweZ");
                        wylRoczneNoweZ04.setKwotaIlosc( wylRocznePlanZ04.getKwotaIlosc().subtract( wylRoczneKontraktZ04.getKwotaIlosc().add(wylRoczneOdnowienieZ04.getKwotaIlosc()) ) );
        
                WyliczKwotaRocznaDTO  wylRoczneNoweZ05 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweZ05.setRok(rok + 4);
                        wylRoczneNoweZ05.setRodzaj("noweZ");
                        wylRoczneNoweZ05.setKwotaIlosc( wylRocznePlanZ05.getKwotaIlosc().subtract( wylRoczneKontraktZ05.getKwotaIlosc().add(wylRoczneOdnowienieZ05.getKwotaIlosc()) ) );
                        
                WyliczKwotaRocznaDTO  wylRoczneNoweZ06 = new WyliczKwotaRocznaDTO();
                        wylRoczneNoweZ06.setRok(rok + 5);
                        wylRoczneNoweZ06.setRodzaj("noweZ");
                        wylRoczneNoweZ06.setKwotaIlosc( wylRocznePlanZ06.getKwotaIlosc().subtract( wylRoczneKontraktZ06.getKwotaIlosc().add(wylRoczneOdnowienieZ06.getKwotaIlosc()) ) );
                        
                Object[] dok005 = { wylRoczneNoweZ01.getRodzaj()
                      , wylRoczneNoweZ01.getKwotaIlosc()
                      , wylRoczneNoweZ02.getKwotaIlosc()
                      , wylRoczneNoweZ03.getKwotaIlosc()
                      , wylRoczneNoweZ04.getKwotaIlosc()
                      , wylRoczneNoweZ05.getKwotaIlosc()
                      , wylRoczneNoweZ06.getKwotaIlosc()  
                };
                tm.addRow(dok005);  
                
                
                
                
                
                ////03
                WyliczKwotaRocznaDTO  wylRoczneUmowZ01 = napServ.zestawienieRodznePodaj( rok, "umowZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowZ02 = napServ.zestawienieRodznePodaj( rok + 1, "umowZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowZ03 = napServ.zestawienieRodznePodaj( rok + 2, "umowZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowZ04 = napServ.zestawienieRodznePodaj( rok + 3, "umowZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowZ05 = napServ.zestawienieRodznePodaj( rok + 4, "umowZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneUmowZ06 = napServ.zestawienieRodznePodaj( rok + 5, "umowZ", "Z", naDzien );
                
                
                Object[] dok003 = { wylRoczneUmowZ01.getRodzaj()
                      , wylRoczneUmowZ01.getKwotaIlosc()
                      , wylRoczneUmowZ02.getKwotaIlosc()
                      , wylRoczneUmowZ03.getKwotaIlosc()
                      , wylRoczneUmowZ04.getKwotaIlosc()
                      , wylRoczneUmowZ05.getKwotaIlosc()
                      , wylRoczneUmowZ06.getKwotaIlosc()  
                };
                tm.addRow(dok003);
                
                
                ////04
                WyliczKwotaRocznaDTO  wylRoczneOdnowienZ01 = napServ.zestawienieRodznePodaj( rok, "odnowienZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienZ02 = napServ.zestawienieRodznePodaj( rok + 1, "odnowienZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienZ03 = napServ.zestawienieRodznePodaj( rok + 2, "odnowienZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienZ04 = napServ.zestawienieRodznePodaj( rok + 3, "odnowienZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienZ05 = napServ.zestawienieRodznePodaj( rok + 4, "odnowienZ", "Z", naDzien );
                WyliczKwotaRocznaDTO  wylRoczneOdnowienZ06 = napServ.zestawienieRodznePodaj( rok + 5, "odnowienZ", "Z", naDzien );
                
                
                Object[] dok004 = { wylRoczneOdnowienZ01.getRodzaj()
                      , wylRoczneOdnowienZ01.getKwotaIlosc()
                      , wylRoczneOdnowienZ02.getKwotaIlosc()
                      , wylRoczneOdnowienZ03.getKwotaIlosc()
                      , wylRoczneOdnowienZ04.getKwotaIlosc()
                      , wylRoczneOdnowienZ05.getKwotaIlosc()
                      , wylRoczneOdnowienZ06.getKwotaIlosc()  
                };
                tm.addRow(dok004);        
                
                
                
                
                
                      
                
                TableColumnModel tcm = jTable1.getColumnModel();
                DecimalFormat df2 = new DecimalFormat( "#,###,###,##0.00" );
                tcm.getColumn(1).setCellRenderer( new NumberRenderer( df2 ) );
                tcm.getColumn(2).setCellRenderer( new NumberRenderer( df2 ) );
                tcm.getColumn(3).setCellRenderer( new NumberRenderer( df2 ) );
                tcm.getColumn(4).setCellRenderer( new NumberRenderer( df2 ) );
                tcm.getColumn(5).setCellRenderer( new NumberRenderer( df2 ) );
                tcm.getColumn(6).setCellRenderer( new NumberRenderer( df2 ) );
        
    }
    
    private void jakieUmowy( String naDzien, String rodzaj ){
        
        
        int rok = 2016; //TODO
                
                
        DecimalFormat df2 = new DecimalFormat( "#,###,###,##0.00" );
        
        
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        SimpleDateFormat dt1 = new SimpleDateFormat("yyyy-MM-dd");
        
        umowy = napServ.podajUmowyDlaRodzaju( rok,  naDzien , rodzaj );
        
        DefaultTableModel tm = (DefaultTableModel) jTable2.getModel();

        
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable2.getModel());
        jTable2.setRowSorter(sorter);
        
        tm.getDataVector().removeAllElements();
        tm.fireTableDataChanged();
        
        for(NapSprzedazPrognozaVO sp : umowy) 
        {
  
            Object[] dok = { sp.getSk(), dt1.format(sp.getDataZakonczenia()),  sp.getKwotaMiesieczna() };
            //dokLst[i] = dok;
            tm.addRow(dok);
            
        }
        
        TableColumnModel tcm = jTable2.getColumnModel();
        tcm.getColumn(2).setCellRenderer( new NumberRenderer( df2 ) );
        
        //. posumownaie 
         BigDecimal total = BigDecimal.ZERO;
            for (int i = 0; i < jTable2.getRowCount(); i++){
                if ( jTable2.getValueAt(i, 2) !=null )
                {
                   BigDecimal amount = new BigDecimal( jTable2.getValueAt(i, 2).toString() );
                   total = total.add(amount); 
                }                  
            }
            
         jLabel4.setText( "" + df2.format(total) );   
        
         this.setCursor( Cursor.getDefaultCursor() );
        
    }
    
    
     private void jakieOkresyDlaUmowy( String naDzien, String sk ){
         
         int rok = 2016; //TODO
                
                
        DecimalFormat df2 = new DecimalFormat( "#,###,###,##0.00" );
        
        
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        SimpleDateFormat dt1 = new SimpleDateFormat("yyyy-MM-dd");
        
        okresy = napServ.podajOkresyDlaUmowy(rok,  naDzien , sk );
        
        DefaultTableModel tm = (DefaultTableModel) jTable3.getModel();

        
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable3.getModel());
        jTable3.setRowSorter(sorter);
        
        tm.getDataVector().removeAllElements();
        tm.fireTableDataChanged();
        
        for(NapSprzedazPrognozaWylVO sp : okresy) 
        {
  
            Object[] dok = { sp.getMiasto(), sp.getSk(), dt1.format(sp.getDataZakonczenia()),  sp.getKwota(), sp.getObPelnyKod() };
            //dokLst[i] = dok;
            tm.addRow(dok);
            
        }
        
        TableColumnModel tcm = jTable3.getColumnModel();
        tcm.getColumn(3).setCellRenderer( new NumberRenderer( df2 ) );
        
        //. posumownaie 
         BigDecimal total = BigDecimal.ZERO;
         BigDecimal kontrakt = BigDecimal.ZERO;
         BigDecimal odnowienie = BigDecimal.ZERO;
            for (int i = 0; i < jTable3.getRowCount(); i++){
                if ( jTable3.getValueAt(i, 3) !=null &&  jTable3.getValueAt(i, 0).equals("kontrakt"))
                {
                   BigDecimal amount = new BigDecimal( jTable3.getValueAt(i, 3).toString() );
                   kontrakt = kontrakt.add(amount); 
                   total = total.add(amount); 
                } 
                else
                {
                    BigDecimal amount = new BigDecimal( jTable3.getValueAt(i, 3).toString() );
                    odnowienie = odnowienie.add(amount); 
                    total = total.add(amount);
                }
            }
            
         jLabel6.setText( "Kontrakt: " + df2.format(kontrakt) + " Odnowienie: " + df2.format(odnowienie) + " Razem: " + df2.format(total)   );   
        
         this.setCursor( Cursor.getDefaultCursor() );
         
     }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextData;
    // End of variables declaration//GEN-END:variables
}
