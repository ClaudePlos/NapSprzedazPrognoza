/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package napsprzedazprognoza;


import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import napsprzedazprognoza.actions.MyTableCellRenderer;
import napsprzedazprognoza.models.NapSprzedazPrognozaVO;
import napsprzedazprognoza.models.NapSprzedazPrognozaWylVO;
import napsprzedazprognoza.models.OkresyDTO;
import napsprzedazprognoza.services.NapServices;
import napsprzedazprognoza.excel.CSVExporter;
import napsprzedazprognoza.excel.ExcelExporter;
import napsprzedazprognoza.renderer.NumberRenderer;

/**
 *
 * @author k.skowronski
 */
public class WindowStart extends javax.swing.JFrame {
    
    final JPanel panel = new JPanel();
    
    private boolean DEBUG = false;
    
    private NapServices napServ = NapServices.getInstance();
    
    Timer timer = new Timer();
    
    List<NapSprzedazPrognozaVO> sprzPrognoza = new ArrayList<NapSprzedazPrognozaVO>();
    
    //List<OkresyDTO> okresy = new ArrayList<OkresyDTO>();

    /**
     * Creates new form WindowStart
     */
    public WindowStart() {
        initComponents();
        
        
       /* try {
            Thread.sleep(1000);
        } catch (Exception e) {}
        synchronized (this) {*/
            pobierzDane();
       // }
  
        
        
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy");
        Date date = new Date();
        labData.setText( dateFormat.format(date) );
        txtDataZak.setText( dateFormat.format(date).toString() );
        
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(195);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(195);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(195);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(195);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(195);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(195);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(195);
        
        
        timer.scheduleAtFixedRate(new TimerTask() {
              
            @Override
            public void run() {
                sprawdzCzyOdwiezycWyliczeniePlanu();
            }
          }, 1*10*1000, 1*60*1000); // wystartuje po minucie i ponownie po minucie
        
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        labData = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        txtSK = new javax.swing.JTextField();
        comboOB = new javax.swing.JComboBox();
        txtMiasto = new javax.swing.JTextField();
        txtOpis = new javax.swing.JTextField();
        txtDataZak = new javax.swing.JTextField();
        txtKontrakt = new javax.swing.JTextField();
        txtKwotaMC = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        buttonZestaw2 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "SK", "OB", "Miasto", "Opis", "Data Zakonczenia", "Kontrakt", "Kwota Miesięczna"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Wylicz Plan od roku:");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        labData.setText("jTextField1");
        labData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labDataActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        comboOB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00-OP-PSL1", "00-OP-PSL2", "00-OP-PKRK", "00-OC-CLDZ", "00-OC-CWSH", "00-OC-CWLK" }));

        txtDataZak.setText("jTextField4");

        txtKontrakt.setText("Kontrakt");

        txtKwotaMC.setText("0");

        jButton3.setText("Dodaj");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Usuń");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("SK:");

        jLabel2.setText("OB:");

        jLabel3.setText("Miasto:");

        jLabel4.setText("Opis:");

        jLabel5.setText("Kwota:");

        jLabel6.setText("DataZak:");

        jButton6.setText("Zapisz");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setText("excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setText("excel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel7.setText("Marketing v02 2016-03-17");

        jButton8.setText("Odśwież");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel8.setText("Rok:");

        jLabel9.setText(".");

        jButton9.setText("Zest. na dzień");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        buttonZestaw2.setText("Zest. Wykaz Umow");
        buttonZestaw2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonZestaw2ActionPerformed(evt);
            }
        });

        jButton10.setText("2. Zest. Plan RocznySz");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton5.setText("1. Zest. Plan Roczny");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton11.setText("Podsumowanie KONT");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonZestaw2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3)
            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(buttonZestaw2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSK, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboOB, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMiasto, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOpis, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataZak, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(txtKontrakt, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtKwotaMC, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8))
                            .addComponent(jSeparator2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMiasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtOpis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDataZak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKontrakt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKwotaMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)
                        .addComponent(jButton4)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5)
                        .addComponent(jButton6)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(4, 4, 4)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        wyliczNaDzien();
        sprawdzCzyOdwiezycWyliczeniePlanu();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
         // 
        
        SimpleDateFormat df3 = new SimpleDateFormat("yyyy-MM-dd");
        
        NapSprzedazPrognozaVO sp = new NapSprzedazPrognozaVO();
        sp.setSk( txtSK.getText() );
        sp.setObPelnyKod( comboOB.getSelectedItem().toString() );
        sp.setMiasto( txtMiasto.getText() );
        sp.setOpis( txtOpis.getText() );
        
        try {
            sp.setDataZakonczenia( df3.parse( txtDataZak.getText().toString() ) );
        } catch (ParseException ex) {
            Logger.getLogger(WindowStart.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        sp.setKontrakt( txtKontrakt.getText() );
        sp.setKwotaMiesieczna( new BigDecimal( txtKwotaMC.getText().replace(",", ".") ) );

        
        napServ.dodajZmianySprzedazPrognoza( sp );
        
        pobierzDane();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int selectedRowIndex = jTable1.getSelectedRow();
        Object selectedObject = (Object) jTable1.getModel().getValueAt(selectedRowIndex, 0);
        
        NapSprzedazPrognozaVO sp = new NapSprzedazPrognozaVO();
        sp.setId( new BigDecimal( selectedObject.toString() ) );
        napServ.usunZmianySprzedazPrognoza(sp);
        pobierzDane();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        ZestawieniePlanRoczny planroczny = new ZestawieniePlanRoczny();
        planroczny.setVisible( true );
        
        this.setCursor( Cursor.getDefaultCursor() );
    }//GEN-LAST:event_jButton5ActionPerformed

    private void buttonZestaw2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonZestaw2ActionPerformed
       
       this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
       WykazUmowWDanymRoku wykazUmRok = new WykazUmowWDanymRoku();
       wykazUmRok.setVisible( true );
        
       this.setCursor( Cursor.getDefaultCursor() );
        
    }//GEN-LAST:event_buttonZestaw2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

       this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) ); 
        try {
            SimpleDateFormat dt3 = new SimpleDateFormat("yyyy-MM-dd");
            
            // zap2
            int row = jTable1.getSelectedRow();
            String id = jTable1.getValueAt(row, 0).toString();
            
            NapSprzedazPrognozaVO sp = new NapSprzedazPrognozaVO();
            sp.setId( new BigDecimal(id) );
            sp.setSk( txtSK.getText() );
            sp.setObPelnyKod( comboOB.getSelectedItem().toString() );
            sp.setMiasto( txtMiasto.getText() );
            sp.setOpis( txtOpis.getText() );
            sp.setDataZakonczenia( dt3.parse( txtDataZak.getText() ) );
            sp.setKontrakt( txtKontrakt.getText() );
            sp.setKwotaMiesieczna( new BigDecimal(txtKwotaMC.getText().replace(",", ".")) );
            
            String ret = napServ.zapiszZmianySprzedazPrognozaRow( sp );
            
            if ( ret.equals("OK"))
            {
               Object sk = sp.getSk();
               Object ob = sp.getObPelnyKod();
               Object miasto = sp.getMiasto();
               Object opis = sp.getOpis();
               Object data = dt3.format( sp.getDataZakonczenia() );
               Object kontrakt = sp.getKontrakt();
               Object kwota = sp.getKwotaMiesieczna();
               jTable1.setValueAt( sk , row, 1);
               jTable1.setValueAt( ob , row, 2);
               jTable1.setValueAt( miasto , row, 3);
               jTable1.setValueAt( opis , row, 4);
               jTable1.setValueAt( data , row, 5);
               jTable1.setValueAt( kontrakt , row, 6);
               jTable1.setValueAt( kwota , row, 7);
               
               jTable1.repaint();
               //DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
               //tm.fireTableDataChanged();
            }

            
        } catch (ParseException ex) {
            this.setCursor( Cursor.getDefaultCursor() );
            Logger.getLogger(WindowStart.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setCursor( Cursor.getDefaultCursor() );
        
        
        
        sprawdzCzyOdwiezycWyliczeniePlanu();
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        TableModel model = jTable1.getModel();
        
        ExcelExporter csvExp = new ExcelExporter();
        String ret = csvExp.ExportTable(model, this);
        
        if ( ret.equals("OK") )
        {
            JOptionPane.showMessageDialog(panel, "Zapisane", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
       TableModel model2 = jTable2.getModel();
        
        ExcelExporter csvExp = new ExcelExporter();
        String ret = csvExp.ExportTable(model2, this);
        
        if ( ret.equals("OK") )
        {
            JOptionPane.showMessageDialog(panel, "Zapisane", "Info", JOptionPane.INFORMATION_MESSAGE);
        } 
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        
        pobierzDane();
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void labDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_labDataActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        //zestawienie na dzień 
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        ZestawienieNaDzien zestawienieNaDzen = new ZestawienieNaDzien();
        zestawienieNaDzen.setVisible( true );
        
        this.setCursor( Cursor.getDefaultCursor() );
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       ///raprot szczegolowy
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        ZestawieniePlanRocznySzczegolowy zestawieniePlanRocznySzcze = new ZestawieniePlanRocznySzczegolowy();
        zestawieniePlanRocznySzcze.setVisible( true );
        
        this.setCursor( Cursor.getDefaultCursor() );
        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // podsumowanie kontrakt
        
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        PodsumowanieKontraktow podsumowanieKontraktow = new PodsumowanieKontraktow();
        podsumowanieKontraktow.setVisible( true );
        
        this.setCursor( Cursor.getDefaultCursor() );
        
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public void pobierzDane()
    {
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        SimpleDateFormat dt1 = new SimpleDateFormat("yyyy-MM-dd");
        
        sprzPrognoza = napServ.listaSprzedazPrognoza();
        
        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();

 
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
        jTable1.setRowSorter(sorter);
        
        tm.getDataVector().removeAllElements();
        tm.fireTableDataChanged();
        
        
        
        
        Vector okresy = napServ.listaOkresowWyliczonych();
        DefaultTableModel tm2 = (DefaultTableModel) jTable2.getModel();
        
        tm2.getDataVector().removeAllElements();
        tm2.fireTableDataChanged();
        tm2.setColumnCount(0);
        
   
        
        tm2.addColumn("SK");
        tm2.addColumn("OB");
        tm2.addColumn("Miasto");
        tm2.addColumn("Data Zakonczenia");
        
        
        
        
        
        for ( int i=0; i<okresy.size(); i++ )
        {
          tm2.addColumn( dt1.format( okresy.get(i) ));  
        }
        
        
        int i = 0;
        Object[][] dokLst = new Object[sprzPrognoza.size()][20];
        
        for(NapSprzedazPrognozaVO sp : sprzPrognoza) 
        {
  
            Object[] dok = {sp.getId(), sp.getSk(), sp.getObPelnyKod(), sp.getMiasto(), sp.getOpis(), dt1.format( sp.getDataZakonczenia() ) 
                    , sp.getKontrakt(), sp.getKwotaMiesieczna() };
            //dokLst[i] = dok;
            tm.addRow(dok);
            
            prognoza( sp, sp.getWyliczenia() );
            i++;
        }
        
        this.setCursor( Cursor.getDefaultCursor() );
        
        
        TableColumnModel tcm = jTable1.getColumnModel();
        DecimalFormat df2 = new DecimalFormat( "#,###,###,##0.0000" );
        tcm.getColumn(7).setCellRenderer( new NumberRenderer( df2 ) );
        
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable1.rowAtPoint(evt.getPoint());
                int col = jTable1.columnAtPoint(evt.getPoint());
                
                String id = jTable1.getValueAt(row, 0).toString();
                String sk = jTable1.getValueAt(row, 1).toString();
                String ob = jTable1.getValueAt(row, 2).toString();
                String miasto = jTable1.getValueAt(row, 3).toString();
                String opis = jTable1.getValueAt(row, 4).toString();
                String data = jTable1.getValueAt(row, 5).toString();
                String kontrakt = jTable1.getValueAt(row, 6).toString();
                String kwota = null;
                if ( jTable1.getValueAt(row, 7) == null)
                     kwota = "0";
                else    
                     kwota = jTable1.getValueAt(row, 7).toString();
                
                txtSK.setText(sk);
                comboOB.setSelectedItem(ob);
                txtMiasto.setText(miasto);
                txtOpis.setText(opis);
                txtDataZak.setText(data);
                txtKontrakt.setText(kontrakt);
                txtKwotaMC.setText(kwota);
            }
        });

   
        
        
        jTable1.addPropertyChangeListener(new PropertyChangeListener() {
        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            if ("tableCellEditor".equals(evt.getPropertyName())) {
               
                SimpleDateFormat dtt1 = new SimpleDateFormat("dd-MM-yyyy");
                
                int row = jTable1.getSelectedRow();
                int column = jTable1.getSelectedColumn();

                // resul is the new value to insert in the DB
                String resul = jTable1.getValueAt(row, column).toString();
                // id is the primary key of my DB
                String id = jTable1.getValueAt(row, 0).toString();
                
                int res;
                
                
                for(NapSprzedazPrognozaVO sp : sprzPrognoza) 
                {
                   res = sp.getId().compareTo( new BigDecimal( id ) ); 
                    
                   if ( res == 0 && column == 3 )
                   {
                       sp.setMiasto( resul );
                   }
                   
                   if ( res == 0 && column == 4 )
                   {
                       sp.setOpis( resul );
                   }
                   
                   if ( res == 0 && column == 5 )
                   {
                       try {
                           sp.setDataZakonczenia( dtt1.parse( resul ) );
                       } catch (ParseException ex) {
                           Logger.getLogger(WindowStart.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   
                   if ( res == 0 && column == 6 )
                   {
                       sp.setKontrakt( resul );
                   }
                   
                   if ( res == 0 && column == 7 )
                   {
                       sp.setKwotaMiesieczna( new BigDecimal(resul) );
                   }
                   
                   
                }
                
            }
        }
    });
        
        
       

        
    }
           
    
    public void wyliczNaDzien()
    {
        this.setCursor( Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ) );
        
        for(NapSprzedazPrognozaVO sp : sprzPrognoza) 
        {
           napServ.przeliczDane( "01-01-" + labData.getText(), sp.getId() );
        }
        
        pobierzDane();
        
        this.setCursor( Cursor.getDefaultCursor() );
        
    }
    
    public void prognoza( NapSprzedazPrognozaVO sp, List<NapSprzedazPrognozaWylVO> wyl )
    {
        
        
        SimpleDateFormat dt1 = new SimpleDateFormat("yyyy-MM-dd");
        
        //sprzPrognozaWyl = napServ.listaSprzedazPrognozaWyl();
        
        DefaultTableModel tm2 = (DefaultTableModel) jTable2.getModel();
        
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        //TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable2.getModel());
        //jTable2.setRowSorter(sorter);
        
       // tm2.getDataVector().removeAllElements();
       // tm2.fireTableDataChanged();
        
        //zmienia format kolumny liczbowej
        TableColumnModel tcm = jTable2.getColumnModel();
        DecimalFormat df2 = new DecimalFormat( "#,###,###,##0.00" );
        tcm.getColumn(4).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(5).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(6).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(7).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(8).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(9).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(10).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(11).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(12).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(13).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(14).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(15).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(16).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(17).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(18).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(19).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(20).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(21).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(22).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(23).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(24).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(25).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(26).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(27).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(28).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(29).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(30).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(31).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(32).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(33).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(34).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(35).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(36).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(37).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(38).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(39).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(40).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(41).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(42).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(43).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(44).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(45).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(46).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(47).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(48).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(49).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(50).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(51).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(52).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(53).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(54).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(55).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(56).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(57).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(58).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(59).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(60).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(61).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(62).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(63).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(64).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(65).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(66).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(67).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(68).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(69).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(70).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(71).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(72).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(73).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(74).setCellRenderer( new NumberRenderer( df2 ) );
        tcm.getColumn(75).setCellRenderer( new NumberRenderer( df2 ) );
        
        Vector row = new Vector();
        
        row.add(sp.getSk());
        row.add(sp.getObPelnyKod());
        row.add(sp.getMiasto());
        row.add(dt1.format(sp.getDataZakonczenia()));
        
     
         
        
        for( NapSprzedazPrognozaWylVO spW : wyl ) 
        {
            row.add(spW.getKwota());
  
        } 
        
        tm2.addRow(row);
    }
    
    
    public java.util.Date addMonths(java.util.Date aDate, int number){
        java.util.Calendar aCalendar = java.util.Calendar.getInstance();
        aCalendar.setTime(aDate);
        aCalendar.add(java.util.Calendar.MONTH, number);
        return aCalendar.getTime();
    } 
    
    
    public void sprawdzCzyOdwiezycWyliczeniePlanu()
    {
              jLabel9.setText("Sprawdzam");
              jLabel9.setText( napServ.wyliczSprawdzenie( labData.getText() ) );
              jLabel9.setForeground (Color.red);
    }
  
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowStart().setVisible(true);
            }
        });
    }
    
    
    
    
 
  
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonZestaw2;
    private javax.swing.JComboBox comboOB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField labData;
    private javax.swing.JTextField txtDataZak;
    private javax.swing.JTextField txtKontrakt;
    private javax.swing.JTextField txtKwotaMC;
    private javax.swing.JTextField txtMiasto;
    private javax.swing.JTextField txtOpis;
    private javax.swing.JTextField txtSK;
    // End of variables declaration//GEN-END:variables
}

